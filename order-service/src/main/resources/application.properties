
server.port=8082

spring.datasource.url=jdbc:mysql://localhost:3306/microservice_order?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=${mysql_password}
spring.jpa.hibernate.ddl-auto=update


eureka.client.service-url.defaultZone=http://localhost:8084/eureka
spring.application.name=order-service


#circuit breaker

management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoints.health.showDetails=always

resilience4j.circuitbreaker.instances.inventory.register-health-indicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.sliding-window-size=5
resilience4j.circuitbreaker.instances.inventory.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.inventory.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.inventory.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.inventory.automatic-transition-from-open-to-half-open-enabled=true

#Resilience4j timeout properties
resilience4j.timelimiter.instances.inventory.timeout-duration=3s

#kafka properties
spring.kafka.bootstrap-servers=localhost:29092
## default g?i v?i topic? d??i
spring.kafka.template.default-topic=notificationTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:org.example.orderservice.event.OrderPlacedEvent











